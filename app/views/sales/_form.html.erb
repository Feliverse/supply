<%= form_with model: @sale, local: true do |form| %>
  <% if @sale.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@sale.errors.count, "error") %> prohibited this sale from being saved:</h2>

      <ul>
        <% @sale.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :cliente_id %>
    <%= form.hidden_field :cliente_id, id: "cliente_id_hidden" %>
  </div>

  <div class="field">
    <%= form.label :fecha %>
    <%= form.date_select :fecha %>
  </div>

  <h3>Sale Items</h3>
  <div id="sale_items">
    <%= form.fields_for :sale_items do |item_form| %>
      <div class="nested-fields">
        <div class="field">
          <%= item_form.label :item_id, "Product or Article" %>
          <%= item_form.select :item_id, options_for_select(@almacen.inventarios.map { |inv| [inv.product&.name || inv.articulo&.name, inv.product_id || inv.articulo_id, { 'data-available-quantity': inv.cantidad_disponible }] }), include_blank: true %>
          <span class="available_quantity"></span>
        </div>
        <div class="field">
          <%= item_form.label :cantidad %>
          <%= item_form.number_field :cantidad %>
        </div>
        <div class="field">
          <%= item_form.label :unidad_de_medida %>
          <%= item_form.text_field :unidad_de_medida %>
        </div>
        <div class="field">
          <%= item_form.label :precio_unitario %>
          <%= item_form.number_field :precio_unitario, step: 0.01 %>
        </div>
        <button type="button" class="remove_item">Remove Item</button>
      </div>
    <% end %>
  </div>
  <button type="button" id="add_item">Add Item</button>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<template id="sale_item_template">
  <div class="nested-fields">
    <div class="field">
      <label for="sale_sale_items_attributes_new_item_id">Product or Article</label>
      <select name="sale[sale_items_attributes][new][item_id]" id="sale_sale_items_attributes_new_item_id">
        <option value="">Please select</option>
        <% @almacen.inventarios.each do |inv| %>
          <option value="<%= inv.product_id || inv.articulo_id %>" data-available-quantity="<%= inv.cantidad_disponible %>"><%= inv.product&.name || inv.articulo&.name %></option>
        <% end %>
      </select>
      <span class="available_quantity"></span>
    </div>
    <div class="field">
      <label for="sale_sale_items_attributes_new_cantidad">Cantidad</label>
      <input type="number" name="sale[sale_items_attributes][new][cantidad]" id="sale_sale_items_attributes_new_cantidad">
    </div>
    <div class="field">
      <label for="sale_sale_items_attributes_new_unidad_de_medida">Unidad de Medida</label>
      <input type="text" name="sale[sale_items_attributes][new][unidad_de_medida]" id="sale_sale_items_attributes_new_unidad_de_medida">
    </div>
    <div class="field">
      <label for="sale_sale_items_attributes_new_precio_unitario">Precio Unitario</label>
      <input type="number" step="0.01" name="sale[sale_items_attributes][new][precio_unitario]" id="sale_sale_items_attributes_new_precio_unitario">
    </div>
    <button type="button" class="remove_item">Remove Item</button>
  </div>
</template>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('add_item').addEventListener('click', function() {
      var template = document.getElementById('sale_item_template').content.cloneNode(true);
      var newId = new Date().getTime();
      template.querySelectorAll('input, select').forEach(function(input) {
        input.name = input.name.replace('new', newId);
        input.id = input.id.replace('new', newId);
      });
      document.getElementById('sale_items').appendChild(template);
    });

    document.getElementById('sale_items').addEventListener('click', function(event) {
      if (event.target.classList.contains('remove_item')) {
        event.target.closest('.nested-fields').remove();
      }
    });

    document.getElementById('sale_items').addEventListener('change', function(event) {
      if (event.target.tagName === 'SELECT') {
        var selectedOption = event.target.options[event.target.selectedIndex];
        var availableQuantity = selectedOption.getAttribute('data-available-quantity');
        var quantitySpan = event.target.closest('.field').querySelector('.available_quantity');
        quantitySpan.textContent = availableQuantity ? `Available: ${availableQuantity}` : '';
      }
    });
  });

  document.getElementById("client_nit").addEventListener("blur", function() {
    var nit = this.value;
    if (nit) {
      fetch(`/clientes/find_by_nit?nit=${nit}`)
        .then(response => response.json())
        .then(data => {
          if (data && data.id) {
            document.getElementById("cliente_id_hidden").value = data.id;
            document.getElementById("client_name").value = data.name;
            document.getElementById("edit_client").dataset.clientId = data.id;
          } else {
            if (confirm("Cliente no encontrado. Â¿Desea crear un nuevo cliente?")) {
              window.open(`/clientes/new?nit=${nit}`, '_blank', 'width=600,height=400');
            }
            document.getElementById("client_name").value = "";
            document.getElementById("cliente_id_hidden").value = "";
          }
        });
    }
  });

  document.getElementById('edit_client').addEventListener('click', function() {
    document.getElementById("client_name").removeAttribute("readonly");
    document.getElementById("edit_client").classList.add("d-none");
    document.getElementById("save_client").classList.remove("d-none");
  });

  document.getElementById('save_client').addEventListener('click', function() {
    var clientId = document.getElementById("cliente_id_hidden").value;
    var clientName = document.getElementById("client_name").value;
    if (clientId && clientName) {
      fetch(`/clientes/${clientId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ cliente: { name: clientName } })
      })
      .then(response => response.json())
      .then(data => {
        if (data.id) {
          document.getElementById("client_name").setAttribute("readonly", true);
          document.getElementById("edit_client").classList.remove("d-none");
          document.getElementById("save_client").classList.add("d-none");
        } else {
          alert("Error al actualizar el cliente.");
        }
      });
    } else {
      alert('Primero seleccione un cliente.');
    }
  });
</script>
