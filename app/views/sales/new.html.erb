<h1>Nueva Venta</h1>

<%= form_with model: @sale, local: true do |form| %>
  <div class="form-group">
    <%= form.label :client_nit, 'NIT del Cliente' %>
    <%= form.text_field :client_nit, class: 'form-control', id: 'client_nit' %>
  </div>

  <div class="form-group">
    <%= form.label :client_name, 'Nombre del Cliente' %>
    <%= form.text_field :client_name, class: 'form-control', id: 'client_name', readonly: true %>
  </div>

  <h2>Productos/Artículos</h2>
  <table class="table">
    <thead>
      <tr>
        <th>Cantidad</th>
        <th>Unidad de Medida</th>
        <th>Descripción</th>
        <th>Precio Unitario</th>
        <th>Total</th>
      </tr>
    </thead>
    <tbody id="products_table_body">
      <tr>
        <td><input type="number" class="form-control" name="quantity[]" /></td>
        <td><input type="text" class="form-control" name="unit[]" /></td>
        <td><input type="text" class="form-control description" name="description[]" /></td>
        <td><input type="number" class="form-control" name="unit_price[]" /></td>
        <td><input type="number" class="form-control" name="total[]" readonly /></td>
      </tr>
    </tbody>
  </table>
  <div class="form-group">
    <button type="button" class="btn btn-secondary" id="add_product">Agregar Producto</button>
  </div>

  <div class="form-group">
    <label>Total Final:</label>
    <input type="number" class="form-control" id="final_total" readonly />
  </div>

  <div class="form-group">
    <label>Total Final (Literal):</label>
    <input type="text" class="form-control" id="final_total_literal" readonly />
  </div>

  <div class="form-group">
    <%= form.submit 'Crear Venta', class: 'btn btn-primary' %>
  </div>
<% end %>

<%= link_to 'Cancelar', sales_path, class: 'btn btn-secondary' %>

<script>
  document.getElementById('client_nit').addEventListener('blur', function() {
    var clientNit = this.value;
    if (clientNit) {
      fetch('/clients/find_by_nit?nit=' + clientNit)
        .then(response => response.json())
        .then(data => {
          if (data.client) {
            document.getElementById('client_name').value = data.client.name;
          } else {
            if (confirm('Cliente no encontrado. ¿Desea crear un nuevo cliente?')) {
              window.location.href = '/clients/new?nit=' + clientNit;
            }
          }
        });
    }
  });

  document.getElementById('add_product').addEventListener('click', function() {
    var tableBody = document.getElementById('products_table_body');
    var newRow = tableBody.rows[0].cloneNode(true);
    newRow.querySelectorAll('input').forEach(input => input.value = '');
    tableBody.appendChild(newRow);
  });

  document.getElementById('products_table_body').addEventListener('input', function() {
    var rows = this.querySelectorAll('tr');
    var finalTotal = 0;
    rows.forEach(row => {
      var quantity = row.querySelector('input[name="quantity[]"]').value;
      var unitPrice = row.querySelector('input[name="unit_price[]"]').value;
      var total = row.querySelector('input[name="total[]"]');
      total.value = quantity * unitPrice;
      finalTotal += parseFloat(total.value) || 0;
    });
    document.getElementById('final_total').value = finalTotal;
    document.getElementById('final_total_literal').value = numberToWords(finalTotal);
  });

  document.querySelectorAll('.description').forEach(function(element) {
    element.addEventListener('dblclick', function() {
      fetch('/products')
        .then(response => response.json())
        .then(data => {
          var productList = data.products.map(product => `<option value="${product.name}">${product.name} - ${product.brand} - ${product.tech}</option>`).join('');
          var select = document.createElement('select');
          select.innerHTML = productList;
          select.addEventListener('change', function() {
            element.value = this.value;
            document.body.removeChild(select);
          });
          document.body.appendChild(select);
        });
    });
  });

  function numberToWords(number) {
    // Implementar la función para convertir números a palabras en español
    return number; // Placeholder
  }
</script>
